name: Build and Release EvilGuard

on:
  push:
    tags:
      - 'v*'
      - '[0-9]+.[0-9]+'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download JSON Library
        run: |
          mkdir -p lib
          curl -L -o lib/json.jar https://repo1.maven.org/maven2/org/json/json/20240303/json-20240303.jar

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Compile Java sources
        run: |
          mkdir -p build/classes
          javac -cp lib/json.jar -d build/classes $(find src -name "*.java")

      - name: Package JAR
        run: |
          mkdir -p release
          echo "Main-Class: EvilGuard" > manifest.txt
          # Собираем JAR со всеми зависимостями
          jar cfm release/EvilGuard.jar manifest.txt -C build/classes . -C lib .

      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: EvilGuard-JAR
          path: release/EvilGuard.jar

  create-release:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: EvilGuard-JAR
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: "EvilGuard ${{ github.ref_name }}"
          body: |
            ### EvilGuard ${{ github.ref_name }}
            
            **Скачать:**
            - [JAR File](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/EvilGuard.jar)
          draft: false
          prerelease: false
          files: ./artifacts/EvilGuard.jar